/*************************************************************************
【文件名】                 Line3D.cpp
【功能模块和目的】          三维线段类的具体实现
【开发者及日期】            zheng-y23 2024-7-28
*************************************************************************/

#include "Line3D.hpp"
#include "Point3D.hpp"
#include <math.h>

/*************************************************************************
【函数名称】                Line3D
【函数功能】                默认构造函数
【参数】                    无参数
【返回值】                  无返回值
【开发者及日期】            zheng-y23 2024-7-28
*************************************************************************/
Line3D::Line3D() :Element3D() {
    //空函数体
}

/*************************************************************************
【函数名称】                Line3D
【函数功能】                构造函数
【参数】                    点集合Points
【返回值】                  无返回值
【开发者及日期】            zheng-y23 2024-7-28
*************************************************************************/
Line3D::Line3D(CountFixedSet<Point3D> Points) : Element3D(Points) {
    //空函数体
}

/*************************************************************************
【函数名称】                Line3D
【函数功能】                拷贝构造函数
【参数】                    Line3D类型常引用Source
【返回值】                  无返回值
【开发者及日期】            zheng-y23 2024-7-28
*************************************************************************/
Line3D::Line3D(const Line3D& Source) : Element3D(Source) {
    m_ID = Source.ID;
}

/*************************************************************************
【函数名称】                operator=
【函数功能】                赋值运算符重载
【参数】                    Line3D类型常引用Source
【返回值】                  赋值后对象
【开发者及日期】            zheng-y23 2024-8-4
*************************************************************************/
Line3D& Line3D::operator= (const Line3D& Source) {
    if (this != &Source)
    {
        Element3D::operator= (Source);
        m_ID = Source.ID;
    }
    return *this;
}

/*************************************************************************
【函数名称】                operator==
【函数功能】                等于运算符重载
【参数】                    Line3D类型常引用Source
【返回值】                  两线段是否相同
【开发者及日期】            zheng-y23 2024-7-31
*************************************************************************/
bool Line3D::operator== (const Line3D& Source) {
    int iflag = 0;
    for (int i = 0; i < 2; i++)
    {
        for (int j = 0; j < 2; j++)
        {
            if (Element3D::operator[](i) == Source[j])
            {
                iflag += 1;
            }
        }
    }
    return iflag == 2;
}

/*************************************************************************
【函数名称】                operator<<
【函数功能】                流运算符重载
【参数】                    输出流引用out和Line3D类型常引用Source
【返回值】                  输出流
【开发者及日期】            zheng-y23 2024-8-6
*************************************************************************/
std::ostream& operator<< (std::ostream& out, const Line3D& Line) {
    out << "line " << Line.ID << ": ";
    out << "Point " << Line[0].ID << " (" << Line[0].X << ", " << Line[0].Y << ", " << Line[0].Z << ") ";
    out << "Point " << Line[1].ID << " (" << Line[1].X << ", " << Line[1].Y << ", " << Line[1].Z << ") ";
    out << "Length: " << Line.GetLength();
    return out;
}

/*************************************************************************
【函数名称】                SetID
【函数功能】                设置序号
【参数】                    序号ID
【返回值】                  无返回值
【开发者及日期】            zheng-y23 2024-8-2
*************************************************************************/
void Line3D::SetID(size_t NewID) {
    m_ID = NewID;
} 

/*************************************************************************
【函数名称】                ~Line3D
【函数功能】                析构函数
【参数】                    无参数
【返回值】                  无返回值
【开发者及日期】            zheng-y23 2024-7-28
*************************************************************************/
Line3D::~Line3D() {
    //空函数体
}

/*************************************************************************
【函数名称】                GetArea
【函数功能】                获取面积
【参数】                    无参数
【返回值】                  线段面积为零
【开发者及日期】            zheng-y23 2024-7-28
*************************************************************************/
double Line3D::GetArea() const {
    return 0;
}

/*************************************************************************
【函数名称】                GetLength
【函数功能】                获取线段长度
【参数】                    无参数
【返回值】                  返回线段长度
【开发者及日期】            zheng-y23 2024-7-28
*************************************************************************/
double Line3D::GetLength() const {
    double dResult = 0;
    dResult += std::pow(Element3D::GetPoint(0).X - Element3D::GetPoint(1).X, 2) + pow(Element3D::GetPoint(0).Y - Element3D::GetPoint(1).Y, 2) + pow(Element3D::GetPoint(0).Z - Element3D::GetPoint(1).Z, 2);
    return std::sqrt(dResult);
}
